
/DECLARE/

QUEUE SRC, Q;

REAL LAMBDA, RO;
REAL MU = 1000;
INTEGER I;

QUEUE fakeOUT;

REAL temps;

REAL minAttente;
REAL maxAttente;
REAL sommeAttente;

REAL minT;
REAL maxT;
REAL sommeT;

CUSTOMER INTEGER nbpsg;
CUSTOMER REAL Tdebut;

FILE cbQ;

#
/STATION/

NAME = SRC;
TYPE = SOURCE;
SERVICE = BEGIN
    EXP(1. / LAMBDA);
    Tdebut := TIME;
END;
TRANSIT = Q;

#
/STATION/

NAME = Q;
SERVICE = BEGIN
    EXP(1. / MU);
END;
TRANSIT = fakeOUT;

#
/STATION/

NAME = fakeOUT;
SERVICE = BEGIN
    temps := (TIME - Tdebut);
#
    sommeT := sommeT + temps;
#
    IF minT > temps THEN
    BEGIN
        minT := temps;
    END
#
    IF maxT < temps THEN
    BEGIN
        maxT := temps;
    END
#
    sommeAttente := CUSTNB(Q);
#
    IF minAttente > CUSTNB(Q) THEN
    BEGIN
        minAttente := CUSTNB(Q);
    END
#
    IF maxAttente < CUSTNB(Q) THEN
    BEGIN
        maxAttente := CUSTNB(Q);
    END
END;
TRANSIT = OUT;

#
/CONTROL/

TMAX = 1000;

#
/EXEC/

BEGIN
    & On fait varier Rho pour qu'il prenne 99 valeurs définies et qu'on réalise nos mesures (0.01 , ... , 0.99)
    FILASSIGN(cbQ,"p2.q3.data");
    OPEN(cbQ);
    FOR I := 1 STEP 1 UNTIL 99 DO
    BEGIN
        RO := I * 0.010;
        LAMBDA := RO * MU;

        minAttente := 10000000;
        maxAttente := 0;
        sommeAttente := 0;

        minT := 10000000;
        maxT := 0;
        sommeT := 0;

        SIMUL;
        WRITELN(cbQ, I , " " , minT , " " , maxT , " " , sommeT / SERVNB(fakeOUT) , " " , minAttente , " " , maxAttente , " " , sommeAttente / SERVNB(fakeOUT));
    END;
END;

/END/
